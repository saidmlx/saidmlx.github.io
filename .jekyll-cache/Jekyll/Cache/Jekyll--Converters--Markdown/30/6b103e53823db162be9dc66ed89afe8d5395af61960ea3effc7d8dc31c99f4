I"N<p>Cuando se implementa un Web Service se utiliza otra API para convertir de forma automática de XML a objetos; esto es muy útil cuando la definición del Web service es cambiante.
JAXB está presente a partir de la versión 1.6 del JDK. 
En esta entrega se demostrará cómo pasar de un XML Schema a Objetos Java y Viceversa.</p>
<h2 id="entorno-de-trabajo">Entorno de Trabajo</h2>
<ul>
  <li>Apache Maven 3.3.3</li>
  <li>JDK 1.8</li>
</ul>

<h2 id="crear-el-proyecto">Crear el proyecto</h2>
<p>Se crea el proyecto Maven con el arquetipo <strong><em>maven-archetype-quickstart</em></strong> el cual creará un proyecto vacío</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes
-DgroupId=online.saidmlx.example.webservice
-DarchetypeArtifactId=maven-archetype-quickstart 
-DarchetypeVersion=1.0
-DartifactId=jaxb-example 
-DinteractiveMode=false
</span></code></pre></div></div>

<h2 id="configurar-el-pomxml">Configurar el <em>pom.xml</em></h2>
<p>Dentro del archivo de configuración hay que agregar el plugin <strong>maven-jaxb2-plugin</strong>.</p>

<p>El punto a resaltar aquí es que dentro del tag <strong><em>configuration</em></strong> se declara el directorio destino donde se depositaran las clases resultado.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;plugin&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>org.jvnet.jaxb2.maven2<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>maven-jaxb2-plugin<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>0.14.0<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;executions&gt;</span>
      <span class="nt">&lt;execution&gt;</span>
        <span class="nt">&lt;id&gt;</span>generate<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;goals&gt;</span>
          <span class="nt">&lt;goal&gt;</span>generate<span class="nt">&lt;/goal&gt;</span>
        <span class="nt">&lt;/goals&gt;</span>
      <span class="nt">&lt;/execution&gt;</span>
    <span class="nt">&lt;/executions&gt;</span>
    <span class="nt">&lt;configuration&gt;</span>
      <span class="nt">&lt;generateDirectory&gt;</span>${project.basedir}/src/main/generated/<span class="nt">&lt;/generateDirectory&gt;</span>
  <span class="nt">&lt;/configuration&gt;</span>
<span class="nt">&lt;/plugin&gt;</span>
</code></pre></div></div>

<h2 id="declarando-el-xml-schema">Declarando el XML Schema</h2>
<p>La idea es tomar de la datos Abierta Northwind la tabla Products y crear un XML Schema dentro del directorio <em>src/main/resources/</em>.</p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;schema</span> <span class="na">xmlns=</span><span class="s">"http://www.w3.org/2001/XMLSchema"</span>
    <span class="na">targetNamespace=</span><span class="s">"http://www.saidmlx.online/database/northwind/products"</span>
    <span class="na">xmlns:saidmlx=</span><span class="s">"http://www.saidmlx.online/database/northwind/products"</span>
    <span class="na">elementFormDefault=</span><span class="s">"qualified"</span><span class="nt">&gt;</span>
 
  <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"products"</span> <span class="na">type=</span><span class="s">"saidmlx:Products"</span><span class="nt">&gt;&lt;/element&gt;</span>
  <span class="nt">&lt;complexType</span> <span class="na">name=</span><span class="s">"Products"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;sequence&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"product_name"</span> <span class="na">type=</span><span class="s">"string"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"supplier_id"</span> <span class="na">type=</span><span class="s">"int"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"category"</span> <span class="na">type=</span><span class="s">"saidmlx:Categories"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"quantity_per_unit"</span> <span class="na">type=</span><span class="s">"string"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"unit_price"</span> <span class="na">type=</span><span class="s">"float"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"units_in_stock"</span> <span class="na">type=</span><span class="s">"int"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"units_on_order"</span> <span class="na">type=</span><span class="s">"int"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"reorder_level"</span>	<span class="na">type=</span><span class="s">"int"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"discontinued"</span> <span class="na">type=</span><span class="s">"int"</span> <span class="na">minOccurs=</span><span class="s">"1"</span> <span class="na">maxOccurs=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/sequence&gt;</span>
    <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">"product_id"</span> <span class="na">type=</span><span class="s">"saidmlx:ID"</span><span class="nt">&gt;&lt;/attribute&gt;</span>
  <span class="nt">&lt;/complexType&gt;</span>
  
  <span class="nt">&lt;simpleType</span> <span class="na">name=</span><span class="s">"ID"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;restriction</span> <span class="na">base=</span><span class="s">"int"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;pattern</span> <span class="na">value=</span><span class="s">"[0-9]*"</span><span class="nt">&gt;&lt;/pattern&gt;</span>
    <span class="nt">&lt;/restriction&gt;</span>
  <span class="nt">&lt;/simpleType&gt;</span>

  <span class="nt">&lt;complexType</span> <span class="na">name=</span><span class="s">"Categories"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;all&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"category_id"</span> <span class="na">type=</span><span class="s">"int"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"category_name"</span> <span class="na">type=</span><span class="s">"string"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;element</span> <span class="na">name=</span><span class="s">"description"</span> <span class="na">type=</span><span class="s">"string"</span> <span class="nt">/&gt;</span>  
    <span class="nt">&lt;/all&gt;</span>
  <span class="nt">&lt;/complexType&gt;</span> 
<span class="nt">&lt;/schema&gt;</span>
</code></pre></div></div>

<h2 id="generando-los-recursos">Generando los recursos</h2>
<p>Para generar el XML Schema a objetos no es más que ejecutar el plugin con ayuda del Maven.</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go"> mvn generate-sources
</span></code></pre></div></div>

<p>Y con eso nos realizará la siguiente estructura de clases.</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">src/main/generated/
├── META-INF
│   └── sun-jaxb.episode
├── online
│   └── saidmlx
│       └── database
│           └── northwind
│               └── products
│                   ├── Categories.java
│                   ├── ObjectFactory.java
│                   ├── Products.java
│                   └── package-info.java
└── org
    └── w3
        └── _2001
            └── xmlschema
                └── Adapter1.java

</span></code></pre></div></div>

<h2 id="marshaling">Marshaling</h2>
<p>El concepto de Marshaling es el proceso de Serialización(Marshal) corresponde al proceso de convertir un objeto XML a objetos y Deserialización (Unmarshal) que es el proceso de convertir de XML a objeto.</p>

<p>Para ese proceso de Marshaling se escribe la clase <strong><em>online.saidmlx.database.northwind.marshalling.Demo</em></strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">online</span><span class="o">.</span><span class="na">saidmlx</span><span class="o">.</span><span class="na">database</span><span class="o">.</span><span class="na">northwind</span><span class="o">.</span><span class="na">marshalling</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.StringReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.StringWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.bind.JAXBContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.bind.JAXBException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.bind.Marshaller</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.xml.bind.Unmarshaller</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">online.saidmlx.database.northwind.products.Categories</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">online.saidmlx.database.northwind.products.Products</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>

  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">try</span> <span class="o">{</span>
    <span class="c1">//-- fill data</span>
    <span class="nc">Products</span> <span class="n">products</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Products</span><span class="o">();</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setProductId</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setProductName</span><span class="o">(</span><span class="s">"Chai"</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setSupplierId</span><span class="o">(</span><span class="mi">8</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setCategory</span><span class="o">(</span><span class="k">new</span> <span class="nc">Categories</span><span class="o">());</span>
    <span class="n">products</span><span class="o">.</span><span class="na">getCategory</span><span class="o">().</span><span class="na">setCategoryId</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">getCategory</span><span class="o">().</span><span class="na">setCategoryName</span><span class="o">(</span><span class="s">"Beverages"</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">getCategory</span><span class="o">().</span><span class="na">setDescription</span><span class="o">(</span><span class="s">"Soft drinks, coffees, teas, beers, and ales"</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setQuantityPerUnit</span><span class="o">(</span><span class="s">"10 boxes x 30 bags"</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setUnitPrice</span><span class="o">(</span><span class="mi">18</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setUnitsInStock</span><span class="o">(</span><span class="mi">39</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setUnitsOnOrder</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setReorderLevel</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
    <span class="n">products</span><span class="o">.</span><span class="na">setDiscontinued</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>

    <span class="c1">//-- Marshaling</span>
    <span class="nc">JAXBContext</span> <span class="n">context</span><span class="o">=</span> <span class="nc">JAXBContext</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="nc">Products</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>			
    <span class="nc">Marshaller</span> <span class="n">marshaler</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">createMarshaller</span><span class="o">();</span>
    <span class="nc">StringWriter</span> <span class="n">writer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringWriter</span><span class="o">();</span>
    <span class="n">marshaler</span><span class="o">.</span><span class="na">marshal</span><span class="o">(</span><span class="n">products</span><span class="o">,</span> <span class="n">writer</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">writer</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

    <span class="c1">//-- Unmarshalling</span>
    <span class="nc">Unmarshaller</span> <span class="n">unmarshaler</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">createUnmarshaller</span><span class="o">();</span>
    <span class="nc">Products</span> <span class="n">productsResult</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Products</span><span class="o">)</span><span class="n">unmarshaler</span><span class="o">.</span><span class="na">unmarshal</span><span class="o">(</span><span class="k">new</span> <span class="nc">StringReader</span><span class="o">(</span><span class="n">writer</span><span class="o">.</span><span class="na">toString</span><span class="o">()));</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">productsResult</span><span class="o">.</span><span class="na">getCategory</span><span class="o">().</span><span class="na">getDescription</span><span class="o">());</span>

  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">JAXBException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
  <span class="o">}</span>
  <span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<h2 id="resultado">Resultado</h2>
<p>Y el proyecto está listo si ejecutamos la clase <strong><em>online.saidmlx.database.northwind.marshalling.Demo</em></strong> tendremos el resultado</p>

<h3 id="marshaling-1">Marshaling</h3>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;</span>
<span class="nt">&lt;products</span> <span class="na">product_id=</span><span class="s">"1"</span>
<span class="na">xmlns=</span><span class="s">"http://www.saidmlx.online/database/northwind/products"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;product_name&gt;</span>Chai<span class="nt">&lt;/product_name&gt;</span>
  <span class="nt">&lt;supplier_id&gt;</span>8<span class="nt">&lt;/supplier_id&gt;</span>
  <span class="nt">&lt;category&gt;</span>
    <span class="nt">&lt;category_id&gt;</span>1<span class="nt">&lt;/category_id&gt;</span>
    <span class="nt">&lt;category_name&gt;</span>Beverages<span class="nt">&lt;/category_name&gt;</span>
    <span class="nt">&lt;description&gt;</span>Soft drinks, coffees, teas, beers, and ales<span class="nt">&lt;/description&gt;</span>
  <span class="nt">&lt;/category&gt;</span>
  <span class="nt">&lt;quantity_per_unit&gt;</span>10 boxes x 30 bags<span class="nt">&lt;/quantity_per_unit&gt;</span>
  <span class="nt">&lt;unit_price&gt;</span>18.0<span class="nt">&lt;/unit_price&gt;</span>
  <span class="nt">&lt;units_in_stock&gt;</span>39<span class="nt">&lt;/units_in_stock&gt;</span>
  <span class="nt">&lt;units_on_order&gt;</span>0<span class="nt">&lt;/units_on_order&gt;</span>
  <span class="nt">&lt;reorder_level&gt;</span>10<span class="nt">&lt;/reorder_level&gt;</span>
  <span class="nt">&lt;discontinued&gt;</span>1<span class="nt">&lt;/discontinued&gt;</span>
<span class="nt">&lt;/products&gt;</span>

</code></pre></div></div>

<h3 id="unmarshaling">Unmarshaling</h3>
<p>Que corresponde a la propiedad <strong><em>productsResult.getCategory().getDescription()</em></strong></p>
<pre><code class="language-Terminal">Soft drinks, coffees, teas, beers, and ales
</code></pre>

<hr />

<blockquote>
  <p>Si lo que quieres es el codigo <a href="https://github.com/saidmlx/jaxb-example" target="_blank">aqui</a>  esta</p>
</blockquote>

<h2 id="documentación">Documentación</h2>

<p><a href="https://es.wikipedia.org/wiki/JAXB" target="_blank">Java Architecture for XML Binding (JAXB)</a></p>

<p><a href="https://maven.apache.org/archetypes/maven-archetype-quickstart/" target="_blank">Maven Quickstart Archetype
</a></p>

<p><a href="https://github.com/highsource/maven-jaxb2-plugin" target="_blank">JAXB2 Maven Plugin
</a></p>
:ET