I"âp<p>Ejemplos de nuevas funcionalidades de Javascript, como son los metodos reduce, map, filter, uso de arrow funcion y trabajo con objetos</p>

<h3 id="funciones">Funciones</h3>

<p>1 Antes</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">radio</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">areaCircle</span> <span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">radio</span><span class="p">){</span>
    <span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span> <span class="o">*</span>  <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">radio</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> 
<span class="p">}</span>
<span class="kd">var</span> <span class="nx">area</span><span class="o">=</span><span class="nx">areaCircle</span><span class="p">(</span><span class="nx">radio</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">El area de un circulo con radio </span><span class="dl">'</span><span class="o">+</span><span class="nx">radio</span><span class="o">+</span><span class="dl">'</span><span class="s1"> es: </span><span class="dl">'</span><span class="o">+</span> <span class="nx">area</span><span class="p">);</span>

<span class="c1">//--&gt; El area de un circulo con radio 2 es: 12.566370614359172</span>
</code></pre></div></div>
<p>2 Ahora</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">radio</span> <span class="o">=</span> <span class="mi">2</span>
<span class="kd">const</span> <span class="nx">areaCircle</span> <span class="o">=</span> <span class="p">(</span><span class="nx">radio</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span> <span class="o">*</span>  <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">radio</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> 
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`El area de un circulo con radio </span><span class="p">${</span><span class="nx">radio</span><span class="p">}</span><span class="s2"> es: </span><span class="p">${</span><span class="nx">areaCircle</span><span class="p">(</span><span class="nx">radio</span><span class="p">)}</span><span class="s2">`</span><span class="p">);</span>

<span class="c1">//--&gt;  El area de un circulo con radio 2 es: 12.566370614359172</span>
</code></pre></div></div>

<h3 id="trabajando-objetos">Trabajando Objetos</h3>

<p>1 Prototype</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">Dog</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Dog:Constructor()</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>
<span class="nx">Dog</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">talk</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">auuuuuu</span><span class="dl">'</span><span class="p">);</span>
<span class="p">}</span>
<span class="kd">var</span> <span class="nx">dog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">();</span>
<span class="nx">dog</span><span class="p">.</span><span class="nx">talk</span><span class="p">();</span>
</code></pre></div></div>
<p>2 Create</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">Dog</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">init</span><span class="p">:</span><span class="kd">function</span> <span class="nx">init</span><span class="p">(){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Dog:Constructor()</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="na">talk</span> <span class="p">:</span> <span class="kd">function</span> <span class="nx">talk</span><span class="p">(){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">auuuuuu</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">dog</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">Dog</span><span class="p">);</span>
<span class="nx">dog</span><span class="p">.</span><span class="nx">talk</span><span class="p">();</span>
</code></pre></div></div>
<p>3 Class</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Dog</span>  <span class="p">{</span>
  <span class="kd">constructor</span><span class="p">(){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Dog:Constructor()</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="nx">talk</span><span class="p">(){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">auuuuuu</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">dog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">();</span>
<span class="nx">dog</span><span class="p">.</span><span class="nx">talk</span><span class="p">();</span>
</code></pre></div></div>
<h3 id="arrays">Arrays</h3>

<h4 id="reduce">Reduce</h4>
<p>Sumar numeros de un array.</p>

<p>1 Antes</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">array</span><span class="p">){</span>
  <span class="kd">var</span> <span class="nx">total</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">array</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
    <span class="nx">total</span> <span class="o">+=</span><span class="nx">array</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">total</span><span class="p">;</span>
<span class="p">}</span>
<span class="nx">add</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]);</span>
<span class="c1">//-- 6</span>
</code></pre></div></div>
<p>2 Despues</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">add</span><span class="p">(</span><span class="nx">array</span><span class="p">){</span>
  <span class="k">return</span> <span class="nx">array</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span>
    <span class="kd">function</span><span class="p">(</span><span class="nx">acum</span><span class="p">,</span><span class="nx">next</span><span class="p">){</span> 
      <span class="k">return</span><span class="p">(</span><span class="nx">acum</span> <span class="o">+=</span><span class="nx">next</span><span class="p">)</span>  
    <span class="p">}</span>
  <span class="p">)</span>
<span class="p">}</span>
<span class="nx">add</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
<span class="c1">//-- 6</span>
</code></pre></div></div>
<p>3 Despues utilizando arrow function</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">add</span> <span class="o">=</span> <span class="p">(</span><span class="nx">array</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">array</span><span class="p">.</span><span class="nx">reduce</span><span class="p">((</span><span class="nx">acum</span><span class="p">,</span><span class="nx">next</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">acum</span> <span class="o">+=</span><span class="nx">next</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
<span class="nx">add</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]);</span>
<span class="c1">//-- 6</span>
</code></pre></div></div>
<h4 id="map">Map</h4>
<p>Duplicar el valor de los numeros de un array</p>

<p>1 Antes utilizando la estructura <em><strong>For</strong></em></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">duplicate</span><span class="p">(</span><span class="nx">array</span><span class="p">){</span>
  <span class="kd">var</span> <span class="nx">arrayDuplicate</span><span class="o">=</span><span class="p">[];</span>
  <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">array</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
    <span class="nx">arrayDuplicate</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">array</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">arrayDuplicate</span><span class="p">;</span>
<span class="p">}</span> 
<span class="nx">duplicate</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>

<span class="c1">//-- [2,4,6]</span>
</code></pre></div></div>
<p>2 Despues utilizando la estructura <em><strong>Map</strong></em></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">duplicate</span><span class="p">(</span><span class="nx">array</span><span class="p">){</span>
  <span class="k">return</span> <span class="nx">array</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">){</span><span class="k">return</span> <span class="nx">item</span><span class="o">*</span><span class="mi">2</span><span class="p">});</span>
<span class="p">}</span> 
<span class="nx">duplicate</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
</code></pre></div></div>
<p>3 Despues utilizando la estructura <em><strong>Map</strong></em> combinada con <em><strong>Arrow Functions</strong></em></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span>  <span class="nx">duplicate</span> <span class="o">=</span><span class="p">(</span><span class="nx">array</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">array</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">item</span> <span class="o">=&gt;</span> <span class="nx">item</span><span class="o">*</span><span class="mi">2</span><span class="p">);</span>
<span class="nx">duplicate</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]);</span>

<span class="c1">//-- [2,4,6]</span>
</code></pre></div></div>

<h4 id="filter">Filter</h4>
<p>Obtener numeros pares de un array</p>

<p>1 Antes utilizando la estructura <em><strong>For</strong></em></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">pairNumbers</span><span class="p">(</span><span class="nx">array</span><span class="p">){</span>
  <span class="kd">var</span> <span class="nx">arrayPairNumbers</span><span class="o">=</span><span class="p">[];</span>
  <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">array</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">array</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
      <span class="nx">arrayPairNumbers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">array</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">arrayPairNumbers</span><span class="p">;</span>
<span class="p">}</span> 
<span class="nx">pairNumbers</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">])</span>

<span class="c1">//-- [2,4,6]</span>
</code></pre></div></div>
<p>2 Despues utilizando la estructura <em><strong>Filter</strong></em></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">function</span> <span class="nx">pairNumbers</span><span class="p">(</span><span class="nx">array</span><span class="p">){</span>
  <span class="k">return</span> <span class="nx">array</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">){</span><span class="k">return</span> <span class="nx">item</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">})</span>
<span class="p">}</span> 
<span class="nx">pairNumbers</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">])</span>

<span class="c1">//-- [2,4,6]</span>
</code></pre></div></div>
<p>3 Despues utilizando la estructura <em><strong>Filter</strong></em> combinada con <em><strong>Arrow Functions</strong></em></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span>  <span class="nx">pairNumbers</span> <span class="o">=</span> <span class="p">(</span><span class="nx">array</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">array</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span> <span class="nx">item</span> <span class="o">=&gt;</span>   <span class="nx">item</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">);</span>
<span class="nx">pairNumbers</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">])</span>

<span class="c1">//-- [2,4,6]</span>
</code></pre></div></div>
<h3 id="closures">Closures</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">sayHelloFamily</span><span class="p">(</span><span class="nx">lastName</span><span class="p">){</span>
  <span class="k">return</span> <span class="kd">function</span> <span class="nx">sayHelloFamilyMember</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">` Hello </span><span class="p">${</span><span class="nx">lastName</span><span class="p">}</span><span class="s2"> </span><span class="p">${</span><span class="nx">name</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="kd">const</span>  <span class="nx">saludarMorales</span><span class="o">=</span><span class="nx">sayHelloFamily</span><span class="p">(</span><span class="dl">'</span><span class="s1">Morales</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">saludarMorales</span><span class="p">(</span><span class="dl">'</span><span class="s1">Said</span><span class="dl">'</span><span class="p">)</span>

<span class="c1">//-- Hello Morales Said</span>
</code></pre></div></div>

<h3 id="inmediatly-invoked-function-expression-iife">Inmediatly Invoked Function Expression (IIFE)</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">said</span><span class="dl">'</span><span class="p">;</span>
<span class="p">(</span><span class="kd">function</span> <span class="nx">sayHello</span><span class="p">(){</span>
 <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Hello </span><span class="p">${</span><span class="nx">name</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
<span class="p">})()</span>
</code></pre></div></div>
<h3 id="el-scope-this">El Scope this</h3>

<p>Si utilizabas el self como en el siguiente ejemplo</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Persona</span> <span class="p">{</span>
  <span class="kd">constructor</span><span class="p">(</span><span class="nx">nombre</span><span class="p">,</span> <span class="nx">amigos</span> <span class="o">=</span> <span class="p">[])</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">nombre</span> <span class="o">=</span> <span class="nx">nombre</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">amigos</span> <span class="o">=</span> <span class="nx">amigos</span>
  <span class="p">}</span>

  <span class="nx">listarAmigos</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nb">self</span> <span class="o">=</span> <span class="k">this</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">amigos</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">amigo</span><span class="p">)</span>  <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Hola, mi nombre es </span><span class="p">${</span><span class="nb">self</span><span class="p">.</span><span class="nx">nombre</span><span class="p">}</span><span class="s2"> y soy amigo de </span><span class="p">${</span><span class="nx">amigo</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
    <span class="p">})</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">persona</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Persona</span><span class="p">(</span><span class="dl">"</span><span class="s2">Said</span><span class="dl">"</span><span class="p">,</span> <span class="p">[</span> <span class="dl">"</span><span class="s2">Pedro</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Juan</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Pepe</span><span class="dl">"</span> <span class="p">])</span>
<span class="nx">persona</span><span class="p">.</span><span class="nx">listarAmigos</span><span class="p">()</span>

<span class="c1">//-- Hola, mi nombre es Said y soy amigo de Pedro</span>
<span class="c1">//-- 11 Hola, mi nombre es Said y soy amigo de Juan</span>
<span class="c1">//-- Hola, mi nombre es Said y soy amigo de Pepe</span>
</code></pre></div></div>

<p>Tabbien lo puedes utilizar de la siguiente forma.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Persona</span> <span class="p">{</span>
  <span class="kd">constructor</span><span class="p">(</span><span class="nx">nombre</span><span class="p">,</span> <span class="nx">amigos</span> <span class="o">=</span> <span class="p">[])</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">nombre</span> <span class="o">=</span> <span class="nx">nombre</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">amigos</span> <span class="o">=</span> <span class="nx">amigos</span>
  <span class="p">}</span>
  <span class="nx">listarAmigos</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">amigos</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">amigo</span><span class="p">)</span>  <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Hola, mi nombre es </span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">nombre</span><span class="p">}</span><span class="s2"> y soy amigo de </span><span class="p">${</span><span class="nx">amigo</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
    <span class="p">}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">)</span> <span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">persona</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Persona</span><span class="p">(</span><span class="dl">"</span><span class="s2">Said</span><span class="dl">"</span><span class="p">,</span> <span class="p">[</span> <span class="dl">"</span><span class="s2">Pedro</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Juan</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Pepe</span><span class="dl">"</span> <span class="p">])</span>
<span class="nx">persona</span><span class="p">.</span><span class="nx">listarAmigos</span><span class="p">()</span>

<span class="c1">//-- Hola, mi nombre es Said y soy amigo de Pedro</span>
<span class="c1">//-- 11 Hola, mi nombre es Said y soy amigo de Juan</span>
<span class="c1">//-- Hola, mi nombre es Said y soy amigo de Pepe</span>
</code></pre></div></div>

<p>Un poco mas reducido con Arrow Functions</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Persona</span> <span class="p">{</span>
  <span class="kd">constructor</span><span class="p">(</span><span class="nx">nombre</span><span class="p">,</span> <span class="nx">amigos</span> <span class="o">=</span> <span class="p">[])</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">nombre</span> <span class="o">=</span> <span class="nx">nombre</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">amigos</span> <span class="o">=</span> <span class="nx">amigos</span>
  <span class="p">}</span>
  <span class="nx">listarAmigos</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">amigos</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">amigo</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Hola, mi nombre es </span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">nombre</span><span class="p">}</span><span class="s2"> y soy amigo de </span><span class="p">${</span><span class="nx">amigo</span><span class="p">}</span><span class="s2">`</span><span class="p">))</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">persona</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Persona</span><span class="p">(</span><span class="dl">"</span><span class="s2">Said</span><span class="dl">"</span><span class="p">,</span> <span class="p">[</span> <span class="dl">"</span><span class="s2">Pedro</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Juan</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Pepe</span><span class="dl">"</span> <span class="p">])</span>
<span class="nx">persona</span><span class="p">.</span><span class="nx">listarAmigos</span><span class="p">()</span>

<span class="c1">//-- Hola, mi nombre es Said y soy amigo de Pedro</span>
<span class="c1">//-- 11 Hola, mi nombre es Said y soy amigo de Juan</span>
<span class="c1">//-- Hola, mi nombre es Said y soy amigo de Pepe</span>
</code></pre></div></div>

:ET