I":/<p><strong>Direct Web Remoting (DWR)</strong> es una librería que nos permite hacer peticiones HTTP desde Javascript, si hacer peticiones <strong>AJAX</strong>, de esta forma podemos hacer nuestras aplicaciones más dinámicas dentro de una aplicación con <strong>Struts2</strong>.</p>

<p>Si bien Struts ya no es una tecnología común a implementar en estos días, existen en las empresas muchos proyectos y por consiguiente es necesario darles mantenimiento como a mi me paso, razón por la cual estoy compartiendo esta información.</p>

<p>Aquí no explicare que es Struts ni cómo funciona, ya existen muchas páginas para eso, aquí solo realizaremos las configuraciones básicas desde el inicio.</p>

<h2 id="que-necesitamos">Que necesitamos</h2>
<ul>
  <li><strong>Java:</strong> con un nivel básico es suficiente.</li>
  <li><strong>Maven:</strong> hay que tenerlo configurado.</li>
</ul>

<h2 id="creamos-el-proyecto-con-maven">Creamos el proyecto con Maven</h2>

<p>Ya debemos tener instalado Maven, si no es así puedes seguir este Tutorial</p>

<p>Si quieres comprobar que lo tienes instalado correctamente puedes seguir el post Configuración básica de Java Spring</p>

<p>Ejecutamos en la terminal la instrucción siguiente que nos creara la configuración básica de un proyecto.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mvn archetype:generate <span class="nt">-B</span> <span class="se">\</span>
  <span class="nt">-DgroupId</span><span class="o">=</span>io.saidmlx <span class="se">\</span>
  <span class="nt">-DartifactId</span><span class="o">=</span>dwr-struts-2 <span class="se">\</span>
  <span class="nt">-DarchetypeGroupId</span><span class="o">=</span>org.apache.struts <span class="se">\</span>
  <span class="nt">-DarchetypeArtifactId</span><span class="o">=</span>struts2-archetype-blank <span class="se">\</span>
  <span class="nt">-DarchetypeVersion</span><span class="o">=</span>2.5.5 <span class="se">\</span>
  <span class="nt">-DremoteRepositories</span><span class="o">=</span>http://struts.apache.org
</code></pre></div></div>

<h2 id="agregamos-las-dependencias-dentro-del-archivo-pomxml">Agregamos Las dependencias dentro del archivo pom.xml</h2>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>commons-logging<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>commons-logging<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>1.2<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="nt">&lt;dependency&gt;</span>
	<span class="nt">&lt;groupId&gt;</span>org.directwebremoting<span class="nt">&lt;/groupId&gt;</span>
	<span class="nt">&lt;artifactId&gt;</span>dwr<span class="nt">&lt;/artifactId&gt;</span>
	<span class="nt">&lt;version&gt;</span>3.0.2-RELEASE<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<h2 id="el-servlet-que-realizara-el-trabajo">El servlet que realizara el trabajo</h2>

<p>La primer configuración compleja es crear un <strong>Servlet</strong> que servirá como punto de entrada</p>

<p>así que agregamos el <strong>Servlet</strong> dentro del <strong>web.xml</strong></p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;servlet&gt;</span>
	<span class="nt">&lt;servlet-name&gt;</span>dwr-invoker<span class="nt">&lt;/servlet-name&gt;</span>
	<span class="nt">&lt;servlet-class&gt;</span>org.directwebremoting.servlet.DwrServlet<span class="nt">&lt;/servlet-class&gt;</span>
	<span class="nt">&lt;init-param&gt;</span>
		<span class="nt">&lt;param-name&gt;</span>debug<span class="nt">&lt;/param-name&gt;</span>
		<span class="nt">&lt;param-value&gt;</span> true <span class="nt">&lt;/param-value&gt;</span>
	<span class="nt">&lt;/init-param&gt;</span>
<span class="nt">&lt;/servlet&gt;</span>
<span class="nt">&lt;servlet-mapping&gt;</span>
	<span class="nt">&lt;servlet-name&gt;</span>dwr-invoker<span class="nt">&lt;/servlet-name&gt;</span>
	<span class="nt">&lt;url-pattern&gt;</span> /dwr/* <span class="nt">&lt;/url-pattern&gt;</span>
<span class="nt">&lt;/servlet-mapping&gt;</span>
</code></pre></div></div>

<h2 id="configuramos-el-dwr">configuramos el DWR</h2>

<p>Aquí está el punto central donde declaramos el DWR y lo hacemos creando un archivo <strong>dwr.xml</strong> al nivel del archivo <strong>web.xml</strong></p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="cp">&lt;!DOCTYPE dwr PUBLIC
    "-//GetAhead Limited//DTD Direct Web Remoting 3.0//EN"
    "http://directwebremoting.org/schema/dwr30.dtd"&gt;</span>

<span class="nt">&lt;dwr&gt;</span>
	<span class="nt">&lt;allow&gt;</span>
   		<span class="nt">&lt;create</span> <span class="na">creator=</span><span class="s">"new"</span> <span class="na">javascript=</span><span class="s">"Message"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">"class"</span> <span class="na">value=</span><span class="s">"io.saidmlx.POJO.Message"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;/create&gt;</span>
	<span class="nt">&lt;/allow&gt;</span>
<span class="nt">&lt;/dwr&gt;</span>
</code></pre></div></div>

<h2 id="creamos-el-pojo">Creamos El POJO</h2>

<p>En el paso anterior declaramos un <strong>DWR</strong> y le asignamos una clase <strong>io.saidmlx.POJO.Message</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">io</span><span class="o">.</span><span class="na">saidmlx</span><span class="o">.</span><span class="na">POJO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Message</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="s">"Hello DWR from Server"</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="creamos-el-front">Creamos el Front</h2>

<p>Modificamos el archivo <strong>hello.jsp</strong> para que quede de con la siguiente estructura.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="err">%@</span> <span class="na">page</span> <span class="na">contentType=</span><span class="s">"text/html; charset=UTF-8"</span><span class="err">%</span><span class="nt">&gt;</span>
<span class="nt">&lt;</span><span class="err">%@</span> <span class="na">taglib</span> <span class="na">prefix=</span><span class="s">"s"</span> <span class="na">uri=</span><span class="s">"/struts-tags"</span><span class="err">%</span><span class="nt">&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;title&gt;&lt;s:text</span> <span class="na">name=</span><span class="s">"hello.message"</span> <span class="nt">/&gt;&lt;/title&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">'text/javascript'</span> <span class="na">src=</span><span class="s">'/dwrStruts2/dwr/engine.js'</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">'text/javascript'</span> <span class="na">src=</span><span class="s">'/dwrStruts2/dwr/util.js'</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">'text/javascript'</span> <span class="na">src=</span><span class="s">'/dwrStruts2/dwr/interface/Message.js'</span><span class="nt">&gt;&lt;/script&gt;</span>

<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
	<span class="nt">&lt;h1&gt;</span>Example dwr<span class="nt">&lt;/h1&gt;</span>
	<span class="nt">&lt;input</span> <span class="na">value=</span><span class="s">"click me!!!"</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">onclick=</span><span class="s">"update();"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"background-color: #ffeaa7; font-weight: bold; width: 300px;"</span> <span class="na">id=</span><span class="s">"divResponse"</span><span class="nt">&gt;</span>Message From Server<span class="nt">&lt;/div&gt;</span>
		
	<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
		<span class="kd">function</span> <span class="nx">update</span><span class="p">()</span> <span class="p">{</span>
			<span class="nx">Message</span><span class="p">.</span><span class="nx">getMessage</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
				<span class="nx">dwr</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="dl">"</span><span class="s2">divResponse</span><span class="dl">"</span><span class="p">,</span> <span class="nx">data</span><span class="p">);</span>
			<span class="p">});</span>
		<span class="p">}</span>
	<span class="nt">&lt;/script&gt;</span>
	
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>En el archivo anterior podemos ver la forma en que se está mandando a llamar nuestro AJAX</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">update</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">Message</span><span class="p">.</span><span class="nx">getMessage</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">dwr</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="dl">"</span><span class="s2">divResponse</span><span class="dl">"</span><span class="p">,</span> <span class="nx">data</span><span class="p">);</span>
	<span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="ejecutar-la-aplicación">Ejecutar la aplicación</h2>

<p>Para ejecutar la aplicación solo tenemos que ejecutar en la terminal</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mvn jetty:run
</code></pre></div></div>

<h4 id="primer-pantalla-de-ejemplo">Primer pantalla de ejemplo</h4>

<p>Al entrar a la url http://localhost:8080/example/HelloWorld.action</p>

<div class="text-center">
  <img src="http://localhost:4000/assets/images/dwr-struts2/dwr-struts2-pantalla-1.png" class="rounded img-thumbnail post-img-center" alt="Direct Web Remoting - pantalla inicial" />
</div>

<h4 id="segunda-pantalla-de-ejemplo">Segunda pantalla de ejemplo</h4>

<p>Al dar click en el boton se ejecuta una peticion AJAX de tipo POST</p>

<div class="text-center">
  <img src="http://localhost:4000/assets/images/dwr-struts2/dwr-struts2-pantalla-2.png" class="rounded img-thumbnail post-img-center" alt="Direct Web Remoting - pantalla con peticion post" />
</div>

<h2 id="el-código-fuente">El código fuente</h2>

<p>Si quieres el codigo fuente solo tienes que hacer un pull request a <a href="https://github.com/saidmlx/dwr-struts-2"> github </a></p>

:ET