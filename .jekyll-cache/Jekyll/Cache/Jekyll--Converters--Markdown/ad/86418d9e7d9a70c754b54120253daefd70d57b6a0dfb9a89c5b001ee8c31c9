I"4J<p>Las imágenes son la base de Docker, y crear una imagen customizada es el punto de partida para todo desarrollador ya que nos permite compartirlas con el equipo de trabajo o con el mundo entero.</p>

<p>En esta sección vamos a construir una imagen customizada con una base de datos propia en base en Mysql y la subiremos a Docker-Hub.</p>

<p>Imaginemos que ya tenemos una base de datos y la queremos pasar al nuevo integrante del equipo que está desarrollando una API REST con Java, pues lo único que hacemos es indicar el repositorio donde obtenerla vía Docker-Hub, el corre el proceso Docker fácilmente en una línea de código y tiene un ambiente de base de datos, sin tener que tramitar permisos de firewall a un ambiente de desarrollo (como se hacía tradicionalmente) o instalar el ambiente y hacer Dump Database.</p>

<h2 id="preparamos-los-scripts">Preparamos los scripts</h2>

<p>Para empezar creamos los scripts SQL y los dejamos en una carpeta <strong>scripts</strong>.</p>

<p>Para fines demostrativos solo vamos a crear solo una tabla así que se crea la carpeta <strong>scripts</strong> y un archivo <strong>create.table.sql</strong></p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span><span class="nb">mkdir </span>scripts
<span class="gp">$</span><span class="w"> </span><span class="nb">touch </span>create.table.sql
<span class="go">
</span></code></pre></div></div>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="nv">`products`</span> <span class="p">(</span>
  <span class="nv">`id`</span> <span class="nb">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="nv">`name`</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">45</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="nv">`description`</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">45</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="nv">`active`</span> <span class="nb">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="nv">`id`</span><span class="p">),</span>
  <span class="k">UNIQUE</span> <span class="k">KEY</span> <span class="nv">`id_UNIQUE`</span> <span class="p">(</span><span class="nv">`id`</span><span class="p">)</span>
<span class="p">)</span> <span class="n">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span> <span class="k">DEFAULT</span> <span class="n">CHARSET</span><span class="o">=</span><span class="n">utf8mb4</span> <span class="k">COLLATE</span><span class="o">=</span><span class="n">utf8mb4_0900_ai_ci</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="crear-el-archivo-dockerfile">Crear el archivo Dockerfile</h2>

<p>El archivo <strong>Dockerfile</strong> es el archivo de configuración principal donde definimos la creación de una imagen.</p>

<ul>
  <li><strong>FROM mysql:</strong> Recordemos que Docker funciona en capas entonces tomamos como base la imagen de <strong><em>Mysql</em></strong></li>
  <li><strong>COPY:</strong> copiamos los scripts generados para que cuando se cargue el proceso estos sean ejecutados en el contenedor</li>
</ul>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Base image</span>
<span class="k">FROM</span><span class="s"> mysql</span>

<span class="c"># Add all scripts </span>
<span class="k">COPY</span><span class="s"> ./scripts/ /docker-entrypoint-initdb.d/</span>

</code></pre></div></div>

<p>Nuestros recursos están listos con la siguiente estructura:</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>tree
<span class="go">├───Dockerfile
└───scripts     
    └───create.table.sql
</span></code></pre></div></div>

<h2 id="crear-la-imagen">Crear la imagen</h2>

<p>Dónde:</p>
<ul>
  <li><strong>-t saidmlx</strong>: es el tag que le vamos a asignar a nuestra imagen</li>
  <li><strong>./</strong>: el contexto de intercambio de archivos.
    <div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker build <span class="nt">-t</span> saidmlx ./
<span class="go">Sending build context to Docker daemon  3.584kB
Step 1/2 : FROM mysql
</span><span class="gp"> ---&gt;</span><span class="w"> </span>f991c20cb508
<span class="go">Step 2/2 : COPY ./scripts/ /docker-entrypoint-initdb.d/
</span><span class="gp"> ---&gt;</span><span class="w"> </span>7c7f96bfc950
<span class="go">Successfully built 7c7f96bfc950
Successfully tagged mysql:saidmlx
</span></code></pre></div>    </div>
  </li>
</ul>

<p>De esta forma al listar las imágenes disponibles descubrimos que existen dos <strong>mysql</strong> como repositorio pero con un <em>tag</em> diferente <strong>latest</strong> que es la imagen del repositorio oficial y <strong>saidmlx</strong> que es la que acabamos de crear, la primera creada hace tres semanas y la segunda creada hace tres minutos.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker image <span class="nb">ls</span>
<span class="go">REPOSITORY                 TAG                 IMAGE ID            CREATED             SIZE
mysql                      saidmlx             7c7f96bfc950        3 minutes ago       486MB
mysql                      latest              f991c20cb508        3 weeks ago         486MB
</span></code></pre></div></div>

<h2 id="ejecutar-un-contenedor-con-una-imagen-customizada">Ejecutar un contenedor con una imagen customizada</h2>

<p>Ejecutamos el contenedor con los parámetros:</p>

<ul>
  <li><strong>-d</strong>: Deatached Mode es la forma en que indicamos que corra en background.</li>
  <li><strong>-p</strong>: puerto, el contenedor corre en el puerto 3306 pero hacemos un bind para que lo escuchemos en Host el puerto 33061.</li>
  <li><strong>–name</strong>: para no tener que hacer referencia al hash le asignamos un nombre.</li>
  <li><strong>-e MYSQL_ROOT_PASSWORD</strong>: variable de entorno donde le asignamos la contraseña al usuario <strong><em>root</em></strong>.</li>
  <li><strong>-e MYSQL_DATABASE=demo</strong>: variable de entorno donde le asignamos el nombre de la base de datos que queremos que cree.</li>
</ul>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-d</span> <span class="nt">-p</span> 3306:3306 <span class="nt">--name</span> mysql-saidmlx <span class="nt">-e</span> <span class="nv">MYSQL_ROOT_PASSWORD</span><span class="o">=</span>secret <span class="nt">-e</span> <span class="nv">MYSQL_DATABASE</span><span class="o">=</span>demo mysql:saidmlx
</code></pre></div></div>
<h1 id="verificar-el-contenido">Verificar el contenido</h1>

<p>Entramos en modo interactivo</p>

<p>Donde:</p>
<ul>
  <li><strong>exec</strong>: indicamos que vamos a pasar un comando.</li>
  <li><strong>-it</strong> Modo interactivo.</li>
  <li><strong>mysql -p</strong>: es el comando para entrar a la consola de mysql con el usuario root(si has trabajado con mysql en consola es lo mismo).</li>
</ul>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker <span class="nb">exec</span> <span class="nt">-it</span> mysql-saidmlx mysql <span class="nt">-p</span>                                      
<span class="go">Enter password:                                                               
</span><span class="gp">Welcome to the MySQL monitor.  Commands end with ;</span><span class="w"> </span>or <span class="se">\g</span><span class="nb">.</span>                     
<span class="go">Your MySQL connection id is 9                                                 
Server version: 8.0.13 MySQL Community Server - GPL                           
                                                                              
Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.  
                                                                              
Oracle is a registered trademark of Oracle Corporation and/or its             
affiliates. Other names may be trademarks of their respective                 
owners.                                                                       
                                                                              
</span><span class="gp">Type 'help;</span><span class="s1">' or '</span><span class="se">\h</span><span class="s1">' for help. Type '</span><span class="se">\c</span><span class="s1">' to clear the current input statement.
</span><span class="gp">mysql&gt;</span><span class="w"> </span><span class="s1">show databases;                                                        
</span></code></pre></div></div>

<p>Mostramos las bases de datos creadas y vemos a <strong>demo</strong> que es valor que le pasamos al proceso en la variable de entorno <strong>MYSQL_DATABASE</strong></p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">mysql&gt;</span><span class="w"> </span>show databases<span class="p">;</span>                                                        
<span class="go">+--------------------+                                                        
| Database           |                                                        
+--------------------+                                                        
| demo               |                                                        
| information_schema |                                                        
| mysql              |                                                        
| performance_schema |                                                        
| sys                |                                                        
+--------------------+                                                        
5 rows in set (0.00 sec)                                                      
</span></code></pre></div></div>

<p>Desplegamos las tablas y vemos la tabla <strong>products</strong> creada y que se encontraba en la ruta <strong>./scripts/create.table.sql</strong>.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">mysql&gt;</span><span class="w"> </span>use demo<span class="p">;</span>                                                  
<span class="go">Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A    
                                                                  
Database changed                                                  
</span><span class="gp">mysql&gt;</span><span class="w"> </span>show tables<span class="p">;</span>                                               
<span class="go">+----------------+                                                
| Tables_in_demo |                                                
+----------------+                                                
| products       |                                                
+----------------+                                                
1 row in set (0.00 sec)                                           
</span></code></pre></div></div>

<p>Ya con esto tenemos una imagen que a la hora de ejecutar el proceso Docker precarga la información, para este ejemplo solo es una tabla, ahora imagina si cargas todo un script de base de datos</p>

<h2 id="subir-nuestra-imagen-a-docker-hub">Subir nuestra imagen a docker-hub</h2>

<p><a href="https://hub.docker.com/">Docker-Hub</a> es un Github para contenedores y para subir la imagen que creamos es necesario crear una cuenta.</p>

<p>Una vez creada una cuenta hay que hacer un par de cambios.</p>

<p>Cambiamos el repository apuntando a nuestro repositorio, como mi cuenta es saidmlx, escribimos lo siguiente.
Donde: 
*<strong>mysql:saidmlx</strong> es la imagen actual
*<strong>saidmlx/mysql:withdatabase</strong> es el repositorio con el tag que queremos asignar</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker tag mysql:saidmlx saidmlx/mysql:withdatabase
</code></pre></div></div>

<p>Y al listar las imágenes vemos las tres la original como <strong>mysql:latest</strong>, la imagen que creamos <strong>mysql:saidmlx</strong> y la que renombramos como <strong>saidmlx/mysql:withdatabase</strong></p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker images
<span class="go">REPOSITORY                 TAG                 IMAGE ID            CREATED             SIZE
saidmlx/mysql              withdatabase        7c7f96bfc950        27 minutes ago      486MB
mysql                      saidmlx             7c7f96bfc950        27 minutes ago      486MB
mysql                      latest              f991c20cb508        3 weeks ago         486MB
</span></code></pre></div></div>

<p>Y ahora subimos la imagen</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker push saidmlx/mysql:withdatabase
<span class="go">The push refers to repository [docker.io/saidmlx/mysql]
48994486ea8f: Pushed
withdatabase: digest: sha256:45a88952d0bf29136031b46608e154ee762c82ab3c37f7fa14e2cdb63fd08cb1 size: 3035
</span></code></pre></div></div>

<p>y a partir de aquí la imagen esta disponible para el mundo entero.</p>

<p><img src="http://localhost:4000/assets/images/docker/docker-hub.JPG" alt="docker hub repository " /></p>

<h2 id="descargar-la-imagen-creada-desde-docker-hub">Descargar la imagen creada desde Docker-Hub</h2>

<p>Para probar que todo funciona eliminamos todas las imagenes relacionadas con myql</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker <span class="nb">rm</span> <span class="nt">-f</span> mysql-saidmlx:latest
<span class="gp">$</span><span class="w"> </span>docker image rmi mysql:saidmlx
<span class="gp">$</span><span class="w"> </span>docker image rmi saidmlx/mysql:withdatabase
</code></pre></div></div>
<p>Lanzamos un proceso Docker pero a la imagen <strong>saidmlx/mysql:withdatabase</strong> y como no la encuentra en el Host la descarga</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker run <span class="nt">-d</span> <span class="nt">-p</span> 3306:3306 <span class="nt">--name</span> mysql-saidmlx <span class="nt">-e</span> <span class="nv">MYSQL_ROOT_PASSWORD</span><span class="o">=</span>secret <span class="nt">-e</span> <span class="nv">MYSQL_DATABASE</span><span class="o">=</span>demo saidmlx/mysql:withdatabase 
<span class="go">Unable to find image 'saidmlx/mysql:withdatabase' locally
withdatabase: Pulling from saidmlx/mysql
a5a6f2f73cd8: Pull complete
</span><span class="c">...
</span><span class="go">31c54ab0e6e7: Pull complete
Digest: sha256:45a88952d0bf29136031b46608e154ee762c82ab3c37f7fa14e2cdb63fd08cb1
Status: Downloaded newer image for saidmlx/mysql:withdatabase
ad1cb6c628e13a4256567bc2a39c3ad262c9b1e580899927842f7beae5d74986
</span></code></pre></div></div>

<p>Vemos el proceso ejecutándose</p>
<pre><code class="language-`terminal">$ docker ps
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                               NAMES
ad1cb6c628e1        saidmlx/mysql:withdatabase   "docker-entrypoint.s…"   4 minutes ago       Up 4 minutes        0.0.0.0:3306-&gt;3306/tcp, 33060/tcp   mysql-saidmlx
</code></pre>

<p>Entramos al contenedor en modo interactivo y podemos ver la base de datos y la tabla creada</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>docker <span class="nb">exec</span> <span class="nt">-it</span> mysql-saidmlx mysql <span class="nt">-p</span>
<span class="go">Enter password:
</span><span class="gp">Welcome to the MySQL monitor.  Commands end with ;</span><span class="w"> </span>or <span class="se">\g</span><span class="nb">.</span>
<span class="go">Your MySQL connection id is 8
Server version: 8.0.13 MySQL Community Server - GPL

Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

</span><span class="gp">Type 'help;</span><span class="s1">' or '</span><span class="se">\h</span><span class="s1">' for help. Type '</span><span class="se">\c</span><span class="s1">' to clear the current input statement.
</span><span class="go">
</span><span class="gp">mysql&gt;</span><span class="w"> </span>show databases<span class="p">;</span>
<span class="go">+--------------------+
| Database           |
+--------------------+
| demo               |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

</span><span class="gp">mysql&gt;</span><span class="w"> </span>use demo<span class="p">;</span>
<span class="go">Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
</span><span class="gp">mysql&gt;</span><span class="w"> </span>show tables<span class="p">;</span>
<span class="go">+----------------+
| Tables_in_demo |
+----------------+
| products       |
+----------------+
1 row in set (0.00 sec)
</span></code></pre></div></div>

<p>Y esta es la forma en que creamos una imagen customizada la subimos a Docker-Hub para que cuando necesitemos podamos descargarla.</p>
:ET