I"¸,<p>Azure Load Balancer nos ayuda a crear una arquitectura de alta disponibilidad.
En esta ocaciÃ³n crearemos un Azure Load Balancer con tres maquinas virtuales y un servidor NGINX</p>

<p><img src="http://localhost:4000/assets/images/azure/azure-load-balancer.png" alt="vue as @saidmlx" /></p>

<h3 id="requerimientos">Requerimientos</h3>

<ol>
  <li>tener una cuenta en <a href="https://azure.microsoft.com/es-es/free/">Azure</a>, puedes crear una gratuita</li>
  <li>tener <a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest">Azure CLI</a> instalado</li>
</ol>

<h2 id="crear-un-load-balancer-desde-linea-de-comandos">Crear un Load Balancer desde linea de comandos</h2>

<p>Una vez instalado <a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest">Azure CLI</a> iniciamos sesiÃ³n desde la terminal <code class="highlighter-rouge">$ az login</code></p>

<h3 id="creamos-un-grupo-de-recursos">Creamos un grupo de recursos</h3>

<p><strong>Donde</strong></p>

<blockquote>
  <p><strong>az group create</strong>: comando para crear  un grupo de recursos</p>
</blockquote>

<p><strong>ParÃ¡metros</strong></p>

<blockquote>
  <p><strong>â€“name myResourceGroup</strong>: se crearÃ¡ un grupo de recursos con el nombre de <em>myResourceGroup</em></p>

  <p><strong>â€“location eastus</strong>: zona donde se creara la infraestructura en este caso <em>East US</em> puedes listar las zonas disponibles 
con el comando <strong>az account list-locations</strong></p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>az group create  
    <span class="nt">--name</span> myResourceGroup  
    <span class="nt">--location</span> eastus
</code></pre></div></div>

<h3 id="creamos-una-direcciÃ³n-pÃºblica">Creamos una direcciÃ³n pÃºblica</h3>

<p><strong>Donde</strong></p>

<blockquote>
  <p><strong>az network public-ip create</strong>: comando para crear una IP pÃºblica</p>
</blockquote>

<p><strong>ParÃ¡metros</strong></p>

<blockquote>
  <p><strong>â€“name myPublicIp</strong>: nombre de la IP pÃºblica</p>

  <p><strong>â€“resource-group myResourceGroup</strong>: grupo de recursos donde sera creada la IP</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>az network public-ip create 
    <span class="nt">--resource-group</span> myResourceGroup 
    <span class="nt">--name</span> myPublicIp
</code></pre></div></div>
<h3 id="creamos-el-balanceador">Creamos el balanceador</h3>

<p><strong>Donde</strong></p>
<blockquote>
  <p><strong>az network lb create</strong>: comando para crear un balanceador (Load Balancer)</p>
</blockquote>

<p><strong>ParÃ¡metros</strong></p>

<blockquote>
  <p><strong>â€“resource-group myResourceGroup</strong>: grupo de recursos donde sera creado el balanceador</p>

  <p><strong>â€“frontend-ip-name myFrontendIpName</strong>: nombre de la configuracion frontal del balanceador</p>

  <p><strong>â€“backend-pool-name myBackendPoolName</strong>: nombre de la configuracion que se utilizara de forma interna</p>

  <p><strong>â€“public-ip-address myPublicIp</strong>: sobre que direccion IP publica estara el balanceador</p>

  <p><strong>â€“name myLoadBalancer</strong>: nombre de nuestro balanceador</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>az network lb create 
    <span class="nt">--resource-group</span> myResourceGroup 
    <span class="nt">--frontend-ip-name</span> myFrontendIpName 
    <span class="nt">--backend-pool-name</span> myBackendPoolName 
    <span class="nt">--public-ip-address</span> myPublicIp 
    <span class="nt">--name</span> myLoadBalancer
</code></pre></div></div>

<h3 id="creamos-una-sonda-de-monitoreo-para-el-load-balancer">Creamos una sonda de monitoreo para el Load Balancer</h3>
<p><strong>Donde</strong></p>
<blockquote>
  <p><strong>az network lb probe create</strong>: comando para crear una sonda de monitoreo</p>
</blockquote>

<p><strong>ParÃ¡metros</strong></p>

<blockquote>
  <p><strong>â€“resource-group myResourceGroup</strong>: a que grupo pertenece</p>

  <p><strong>â€“lb-name myLoadBalancer</strong>: a que Load Balancer  pertenece</p>

  <p><strong>â€“protocol tcp</strong>: el protocolo a monitorear (http, https, tcp)</p>

  <p><strong>â€“port 80</strong>: el puerto a vigilar</p>

  <p><strong>â€“name myHealthProbe</strong>: el nombre de la sonda</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az network lb probe create 
    --resource-group myResourceGroup 
    --lb-name myLoadBalancer 
    --protocol tcp 
    --port 80  
    --name myHealthProbe
</code></pre></div></div>

<h3 id="creamos-una-regla-de-red-del-load-balancer">Creamos una regla de red del Load Balancer</h3>

<p>__Donde:</p>
<blockquote>
  <p><strong>az network lb rule create</strong>: comando para crear una regla de red
<strong>Parametros</strong> 
<strong>â€“resource-group myResourceGroup</strong>: a que grupo pertenece</p>

  <p><strong>â€“lb-name myLoadBalancer</strong>: a que Load Balancer  pertenece</p>

  <p><strong>â€“name myLoadBalancerRule</strong>: nombre de la regla</p>

  <p><strong>â€“protocol tcp</strong>: protocolo sobre el cual se va aplicar</p>

  <p><strong>â€“frontend-port 80</strong>: puerto de comunicaciÃ³n de entrada</p>

  <p><strong>â€“backend-port 80</strong>: puerto de comunicaciÃ³n hacia las maquinas virtuales</p>

  <p><strong>â€“frontend-ip-name myFrontendIpName</strong>: nombre de la interfaz de entrada</p>

  <p><strong>â€“backend-pool-name myBackendPool</strong>: nombre de la colecciÃ³n de comunicaciÃ³n hacia las maquinas virtuales</p>

  <p><strong>â€“probe-name myHealthprobe</strong>: nombre de la regla de red</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az network lb rule create 
    --resource-group myResourceGroup 
    --lb-name myLoadBalancer 
    --name myLoadBalancerRule 
    --protocol tcp 
    --frontend-port 80 
    --backend-port 80 
    --frontend-ip-name myFrontendIpName 
    --backend-pool-name myBackendPool 
    --probe-name myHealthprobe
</code></pre></div></div>

<h3 id="creamos-una-red-virtual">Creamos una red virtual</h3>
<p>Para ensamblar todo necesitamos una red virtual y para eso creamos un Red  y una Subred virtual</p>

<p><strong>Donde</strong></p>

<blockquote>
  <p><strong>az network vnet create</strong>:</p>
</blockquote>

<p><strong>ParÃ¡metros</strong></p>
<blockquote>
  <p><strong>â€“resource-group myResourceGroup</strong>: grupo al que pertenece</p>

  <p><strong>â€“name myVnet</strong>: nombre de la red virtual</p>

  <p><strong>â€“subnet-name mySubnet</strong>:nombre de la subred</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az network vnet create 
    --resource-group myResourceGroup 
    --name myVnet 
    --subnet-name mySubnet
</code></pre></div></div>

<h3 id="creamos-un-grupo-de-seguridad-de-red-nsg">Creamos un grupo de seguridad de red (NSG)</h3>

<p><strong>Donde</strong></p>

<blockquote>
  <p><strong>az network nsg  create</strong>: comando para crear un grupo de seguridad (Network security Group)</p>
</blockquote>

<p><strong>ParÃ¡metros</strong></p>

<blockquote>
  <p><strong>â€“resource-group myResourceGroup</strong>: grupo al que pertenece</p>

  <p><strong>â€“name myNetworkSecurityGroup</strong>: nombre del grupo de seguridad de red (NSG)</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az network nsg  create 
    --resource-group myResourceGroup  
    --name myNetworkSecurityGroup 
</code></pre></div></div>

<h3 id="creamos-una-regla-tcp-para-el-grupo-de-seguridad-de-red">creamos una regla TCP para el grupo de seguridad de red</h3>

<p><strong>Donde</strong></p>

<blockquote>
  <p><strong>az network nsg rule create</strong>:</p>

  <p><strong>â€“resource-group myResourceGroup</strong>:</p>

  <p><strong>â€“nsg-name myNetworkSecurityGroup</strong>:</p>

  <p><strong>â€“name myNetworkSecurityGroupRule</strong>:</p>

  <p><strong>â€“priority 1001</strong>:</p>

  <p><strong>â€“protocol tcp</strong>:</p>

  <p><strong>â€“destination-port-range 80</strong>:</p>
  <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az network nsg rule create 
    <span class="nt">--resource-group</span> myResourceGroup 
    <span class="nt">--nsg-name</span> myNetworkSecurityGroup 
    <span class="nt">--name</span> myNetworkSecurityGroupRule 
    <span class="nt">--priority</span> 1001 
    <span class="nt">--protocol</span> tcp 
    <span class="nt">--destination-port-range</span> 80
</code></pre></div>  </div>
</blockquote>

<h3 id="creamos-interfaces-de-red-para-nuestras-maquinas-virtuales">Creamos interfaces de red para nuestras maquinas virtuales</h3>

<p>En este caso tres porque vamos a crear tres maquinas virtuales</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>for i in `seq 1 3`; do
for&gt; az network nic create --resource-group myResourceGroup --name myNick$i --vnet-name myVnet --subnet mySubnet --network-security-group mynetworkSecurityGroup --lb-name myloadBalancer --lb-address-pools myBackendPoolName
for&gt; done
</code></pre></div></div>

<p>###Crear un conjunto de disponibilidad</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>az vm availability-set create --resource-group myResourceGroup --name myAvailabilitySet
</code></pre></div></div>

<h3 id="creamos-las-maquinas-virtuales">Creamos las maquinas virtuales</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>for i in `seq 1 3`; do
az vm create --resource-group myResourceGroup --name myVM$i --availability-set myAvailabilitySet --nics myNick$i --image UbuntuLTS --admin-username azureuser --generate-ssh-key --custom-data cloud-init.txt --no-wait
done
</code></pre></div></div>
<p>a</p>

<h3 id="script-para-crear-un-servidor-nginx">Script para crear un servidor NGINX</h3>

<p>a</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#cloud-config
package_upgrade: true
packages:
  - nginx
  - nodejs
  - npm
write_files:
  - owner: www-data:www-data
  - path: /etc/nginx/sites-available/default
    content: |
      server {
        listen 80;
        location / {
          proxy_pass http://localhost:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
      }
  - owner: azureuser:azureuser
  - path: /home/azureuser/myapp/index.js
    content: |
      var express = require('express')
      var app = express()
      var os = require('os');
      app.get('/', function (req, res) {
        res.send('Hello World from host ' + os.hostname() + '!')
      })
      app.listen(3000, function () {
        console.log('Hello world app listening on port 3000!')
      })
runcmd:
  - service nginx restart
  - cd "/home/azureuser/myapp"
  - npm init
  - npm install express -y
  - nodejs index.js
</code></pre></div></div>
:ET